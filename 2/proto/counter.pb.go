// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.12
// source: counter.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BumpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	By            uint64                 `protobuf:"varint,1,opt,name=by,proto3" json:"by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BumpRequest) Reset() {
	*x = BumpRequest{}
	mi := &file_counter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BumpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BumpRequest) ProtoMessage() {}

func (x *BumpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_counter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BumpRequest.ProtoReflect.Descriptor instead.
func (*BumpRequest) Descriptor() ([]byte, []int) {
	return file_counter_proto_rawDescGZIP(), []int{0}
}

func (x *BumpRequest) GetBy() uint64 {
	if x != nil {
		return x.By
	}
	return 0
}

type BumpReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Counter       uint64                 `protobuf:"varint,1,opt,name=counter,proto3" json:"counter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BumpReply) Reset() {
	*x = BumpReply{}
	mi := &file_counter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BumpReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BumpReply) ProtoMessage() {}

func (x *BumpReply) ProtoReflect() protoreflect.Message {
	mi := &file_counter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BumpReply.ProtoReflect.Descriptor instead.
func (*BumpReply) Descriptor() ([]byte, []int) {
	return file_counter_proto_rawDescGZIP(), []int{1}
}

func (x *BumpReply) GetCounter() uint64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

var File_counter_proto protoreflect.FileDescriptor

const file_counter_proto_rawDesc = "" +
	"\n" +
	"\rcounter.proto\x12\acounter\"\x1d\n" +
	"\vBumpRequest\x12\x0e\n" +
	"\x02by\x18\x01 \x01(\x04R\x02by\"%\n" +
	"\tBumpReply\x12\x18\n" +
	"\acounter\x18\x01 \x01(\x04R\acounter2=\n" +
	"\aCounter\x122\n" +
	"\x04Bump\x12\x14.counter.BumpRequest\x1a\x12.counter.BumpReply\"\x00B*Z(github.com/2opremio/sagatakehome/2/protob\x06proto3"

var (
	file_counter_proto_rawDescOnce sync.Once
	file_counter_proto_rawDescData []byte
)

func file_counter_proto_rawDescGZIP() []byte {
	file_counter_proto_rawDescOnce.Do(func() {
		file_counter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_counter_proto_rawDesc), len(file_counter_proto_rawDesc)))
	})
	return file_counter_proto_rawDescData
}

var file_counter_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_counter_proto_goTypes = []any{
	(*BumpRequest)(nil), // 0: counter.BumpRequest
	(*BumpReply)(nil),   // 1: counter.BumpReply
}
var file_counter_proto_depIdxs = []int32{
	0, // 0: counter.Counter.Bump:input_type -> counter.BumpRequest
	1, // 1: counter.Counter.Bump:output_type -> counter.BumpReply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_counter_proto_init() }
func file_counter_proto_init() {
	if File_counter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_counter_proto_rawDesc), len(file_counter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_counter_proto_goTypes,
		DependencyIndexes: file_counter_proto_depIdxs,
		MessageInfos:      file_counter_proto_msgTypes,
	}.Build()
	File_counter_proto = out.File
	file_counter_proto_goTypes = nil
	file_counter_proto_depIdxs = nil
}
